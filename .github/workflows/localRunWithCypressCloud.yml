# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Cypress Tests Local - Results CYPRESS CLOUD

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      CYPRESS_DEVICE:
        description: 'Device the tests shall run on'
        required: true
        default:
          'DESKTOP'
      CYPRESS_RUN_NAME:
        description: 'The name of the run'
        required: true
        default: 'Regression'

      CLOUD_RUN_NAME:
        description: 'The name of the run for Cypress Dashboard'
        required: true
        default: 'Regression'

      TAGS:
        description: 'Execute tests with specified tag/s'
        required: true
        default: 'Regression'

      BROWSER:
        description: 'Browser that tests will run on'
        required: true
        default: chrome
        type: choice
        options:
            - chrome
            - electron
            - firefox

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      # Run Cypress tests
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install modules
        run: npm install

      - name: Copy variables to global env
        run: |
          echo "RUN_NAME=${{ inputs.CYPRESS_RUN_NAME}}" >> $GITHUB_ENV
          echo "DEVICE=${{ inputs.CYPRESS_DEVICE}}" >> $GITHUB_ENV
          echo "XRAY_CLIENT_ID=${{ secrets.CYPRESS_XRAY_CLIENT_ID }}" >> $GITHUB_ENV
          echo "XRAY_CLIENT_SECRET=${{ secrets.CYPRESS_XRAY_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "JIRA_API_TOKEN=${{ secrets.CYPRESS_JIRA_API_TOKEN }}" >> $GITHUB_ENV
          echo "BROWSER=${{ inputs.BROWSER }}" >> $GITHUB_ENV
          echo "$CLOUD_KEY=${{ vars.BROWSER }}" >> $GITHUB_ENV
          echo "TAGS=${{ inputs.TAGS }}" >> $GITHUB_ENV
          echo "CLOUD_RUN_NAME=${{ inputs.CLOUD_RUN_NAME }}" >> $GITHUB_ENV

      - name: Print env
        run: env

      - name: Cypress run
        run:  CYPRESS_INCLUDE_TAGS=$TAGS COMMIT_INFO_MESSAGE=$CLOUD_RUN_NAME npx cypress run --browser $BROWSER --record --key $CLOUD_KEY
